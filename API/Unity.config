<?xml version="1.0" encoding="utf-8" ?>
<unity>
	<typeAliases>
		<typeAlias alias="IAppSettingsRetriever" type="Contracts.IAppSettingsRetriever, Contracts" />
		<typeAlias alias="AppSettingsRetriever" type="Logic.AppSettingsRetriever, Logic" />

		<!--<typeAlias alias="ILogger" type="Contracts.ILogger, Contracts" />
		<typeAlias alias="DatabaseLogger" type="Logic.DatabaseLogger, Logic" />
		<typeAlias alias="NoLogger" type="Logic.NoLogger, Logic" />-->

		<!--<typeAlias alias="ISystemLogManager" type="Contracts.DataManagers.ISystemLogManager, Contracts" />
		<typeAlias alias="SystemLogManager" type="Logic.DataManagers.SystemLogManager, Logic" />-->
		
		<typeAlias alias="IEnvironment" type="Contracts.IEnvironment, Contracts" />
		<typeAlias alias="WebEnvironment" type="API.AppCode.WebEnvironment, API" />

		<typeAlias alias="ICacheManager" type="Contracts.Cache.ICacheManager, Contracts" />
		<typeAlias alias="WebCacheManager" type="API.AppCode.WebCacheManager, API" />

		<typeAlias alias="IEmailFormatValidator" type="Contracts.Validators.IEmailFormatValidator, Contracts" />
		<typeAlias alias="EmailFormatValidator" type="Logic.Validators.EmailFormatValidator, Logic" />

		<!--<typeAlias alias="ICurrentUser" type="Contracts.Security.ICurrentUser, Contracts" />
		<typeAlias alias="AuthenticationManager" type="API.AppCode.AuthenticationManager, API" />-->

		<typeAlias alias="IPersistentStorage" type="Contracts.Cache.IPersistentStorage, Contracts" />
		<typeAlias alias="HttpApplicationStorage" type="API.AppCode.HttpApplicationStorage, API" />

		<!--<typeAlias alias="IRepositoryInitializer" type="Contracts.Repositories.IRepositoryInitializer, Contracts" />
		<typeAlias alias="EntityFrameworkInitializer" type="Data.Initializers.EntityFrameworkInitializer, Data" />-->
    
    <typeAlias alias="IRepositoryInitializer" type="Contracts.Repositories.IRepositoryInitializer, Contracts" />
    <typeAlias alias="EntityFrameworkInitializer" type="Logic.EntityFrameworkInitializer, Logic" />

    <!--<typeAlias alias="IPersonManager" type="Contracts.DataManagers.IPersonManager, Contracts" />
    <typeAlias alias="PersonManager" type="Logic.DataManagers.PersonManager, Logic" />

    <typeAlias alias="IAccountManager" type="Contracts.DataManagers.IAccountManager, Contracts" />
	  <typeAlias alias="AccountManager" type="Logic.DataManagers.AccountManager, Logic" />

    <typeAlias alias="IPlayerManager" type="Contracts.DataManagers.IPlayerManager, Contracts" />
    <typeAlias alias="PlayerManager" type="Logic.DataManagers.PlayerManager, Logic" />

    <typeAlias alias="ITermManager" type="Contracts.DataManagers.ITermManager, Contracts" />
    <typeAlias alias="TermManager" type="Logic.DataManagers.TermManager, Logic" />-->

    <!--<typeAlias alias="IAttendanceManager" type="Contracts.DataManagers.IAttendanceManager, Contracts" />
    <typeAlias alias="AttendanceManager" type="Logic.DataManagers.AttendanceManager, Logic" />-->

    <typeAlias alias="IStrategyManager" type="Contracts.DataManagers.IStrategyManager, Contracts" />
    <typeAlias alias="StrategyManager" type="Logic.DataManagers.StrategyManager, Logic" />

	</typeAliases>
	<containers>
		<container>
			<types>
				<type type="IRepositoryInitializer" mapTo="EntityFrameworkInitializer" />
				<type type="IPersistentStorage" mapTo="HttpApplicationStorage" />
				<!--<type type="ICurrentUser" mapTo="AuthenticationManager" />-->
				<type type="IEmailFormatValidator" mapTo="EmailFormatValidator" />
				<type type="ICacheManager" mapTo="WebCacheManager" />
				<type type="IAppSettingsRetriever" mapTo="AppSettingsRetriever" />
				<!--<type type="ILogger" mapTo="DatabaseLogger" />-->
				<!--<type type="ISystemLogManager" mapTo="SystemLogManager" />-->
				<type type="IEnvironment" mapTo="WebEnvironment" />
				<!--<type type="IPersonManager" mapTo="PersonManager" />
        <type type="IPlayerManager" mapTo="PlayerManager" />
        <type type="IAccountManager" mapTo="AccountManager" />



			  <type type="ITermManager" mapTo="TermManager" />
        <type type="IAttendanceManager" mapTo="AttendanceManager" />-->
			  <type type="IStrategyManager" mapTo="StrategyManager" />


      </types>
		</container>
	</containers>
</unity>
