<#@ assembly name="System.Core" #>
<#@ assembly name="Microsoft.SqlServer.Management.Sdk.Sfc" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="System.Xml" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Text" #> 
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#+

public class BaseTemplate : Template
{
	public IEnumerable<Table> Tables{
		get{
			Server server = new Server();
			Database database = new Database(server, "Forex");
			database.Refresh();
			
			// Exclude
			var excludeTables = new List<string>();
			
			var result = database.Tables.Cast<Table>().Where(x => x.IsSystemObject == false && !excludeTables.Contains(x.Name.ToLower()));
			return result;
		}
	}
	
	/// <summary>
	/// Converts database types (int, bit etc) to .Net types (int, bool etc)
	/// </summary>
	protected string GetDotNetTypeFromDBType(Column column){
		var colType = "";
		bool showNull = false;
		if (column.DataType.Name == "int" || column.DataType.Name == "tinyint"){
			colType = "int";
			showNull = true;
		}else if (column.DataType.Name == "varchar" || column.DataType.Name == "text"  || column.DataType.Name == "ntext" || column.DataType.Name == "nvarchar" || column.DataType.Name == "char" || column.DataType.Name == "nchar"){
			colType = "string";
		}else if (column.DataType.Name.Contains("date")){
			colType = "DateTime";
			showNull = true;
		}else if (column.DataType.Name == "smallint"){
			colType = "Int16";
			showNull = true;
		}else if (column.DataType.Name == "timestamp"){
			colType = "byte[]";
			showNull = true;
		}else if (column.DataType.Name == "bit"){
			colType = "bool";
			showNull = true;
		}else if (column.DataType.Name == "decimal" || column.DataType.Name == "numeric"){
			colType = "decimal";
			showNull = true;
		}else if (column.DataType.Name == "real"){
			colType = "float";
			showNull = true;
		}else if (column.DataType.Name == "time"){
			colType = "TimeSpan";
			showNull = true;
		}else if (column.DataType.Name == "uniqueidentifier"){
			colType = "Guid";
			showNull = true;
		}else {
			colType = "col_" + column.DataType.Name;
		}
		
		// Should we indicate that this field is nullable?
		if (column.Nullable && showNull){ colType += "?"; }
		return colType;
	}
	
	public override string TransformText()
	{
        return this.GenerationEnvironment.ToString();
	}
}
#>
